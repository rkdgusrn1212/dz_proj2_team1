<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="team1.mini2.dz3.model.RestaurantDao">

	<resultMap id="restaurantMap" type="RestaurantDto">
		<result property="restaurantNo" column="restaurant_no"
			javaType="java.lang.Integer" jdbcType="INTEGER" />
		<result property="restaurantName" column="restaurant_name"
			javaType="java.lang.String" jdbcType="NVARCHAR" />
		<result property="restaurantPh" column="restaurant_ph"
			javaType="java.lang.String" jdbcType="NVARCHAR" />
		<result property="restaurantCategory"
			column="restaurant_category" javaType="java.lang.String"
			jdbcType="NVARCHAR" />
		<result property="restaurantMenu" column="restaurant_menu"
			javaType="java.lang.String" jdbcType="NVARCHAR" />
		<result property="restaurantSi" column="restaurant_si"
			javaType="java.lang.String" jdbcType="NVARCHAR" />
		<result property="restaurantGu" column="restaurant_gu"
			javaType="java.lang.String" jdbcType="NVARCHAR" />
		<result property="restaurantDong" column="restaurant_dong"
			javaType="java.lang.String" jdbcType="NVARCHAR" />
		<result property="restaurantAddress"
			column="restaurant_address" javaType="java.lang.String"
			jdbcType="NVARCHAR" />
		<result property="restaurantLatitude"
			column="restaurant_latitude" javaType="java.lang.Double"
			jdbcType="DOUBLE" />
		<result property="restaurantLongtitude"
			column="restaurant_longtitude" javaType="java.lang.Double"
			jdbcType="DOUBLE" />

	</resultMap>

	<select id="getList" parameterType="map"
		resultMap="restaurantMap">
		select *
		from
		(select A.*, ROWNUM r from
		(select * from
		restaurant
		order by restaurant_no) A
		)
		where r
		>= #{start} and r &lt;=
		#{end}
	</select>

	<select id="getListWithName" parameterType="map"
		resultMap="restaurantMap">
		select *
		from (select A.*, ROWNUM r from
		(select * from
		restaurant
		where restaurant_name like '%'||#{key}||'%'
		order by
		restaurant_no) A
		)
		where
		r >= #{start} and r &lt;= #{end}
	</select>

	<select id="getListWithCategory" parameterType="map"
		resultMap="restaurantMap">
		select *
		from (select A.*, ROWNUM r from
		(select * from
		restaurant
		where restaurant_category like '%'||#{key}||'%'
		order by
		restaurant_no) A
		)
		where
		r >= #{start} and r &lt;= #{end}
	</select>

	<select id="getListWithMenu" parameterType="map"
		resultMap="restaurantMap">
		select *
		from (select A.*, ROWNUM r from
		(select * from
		restaurant
		where restaurant_menu like '%'||#{key}||'%'
		order by
		restaurant_no) A
		)
		where
		r >= #{start} and r &lt;= #{end}
	</select>

	<select id="getListWithSi" parameterType="map"
		resultMap="restaurantMap">
		select *
		from (select A.*, ROWNUM r from
		(select * from
		restaurant
		where restaurant_si like '%'||#{key}||'%'
		order by
		restaurant_no) A
		)
		where
		r >= #{start} and r &lt;= #{end}
	</select>

	<select id="getListWithGu" parameterType="map"
		resultMap="restaurantMap">
		select *
		from (select A.*, ROWNUM r from
		(select * from
		restaurant
		where restaurant_gu like '%'||#{key}||'%'
		order by
		restaurant_no) A
		)
		where
		r >= #{start} and r &lt;= #{end}
	</select>
	<select id="getListWithDong" parameterType="map"
		resultMap="restaurantMap">
		select *
		from (select A.*, ROWNUM r from
		(select * from
		restaurant
		where
        case
        when
        restaurant_dong like '%동' then
        restaurant_dong
        when
        restaurant_dong like '%읍' then
        restaurant_dong
        when
        restaurant_dong like '%면' then
        restaurant_dong
        when
        restaurant_dong like '%리' then
        restaurant_dong
        else
        restaurant_gu end
        like '%'||#{key}||'%'
		order by
		restaurant_no) A
		)
		where
		r >= #{start} and r &lt;= #{end}
	</select>

	<select id="get" parameterType="int" resultMap="restaurantMap">
		select * from
		restaurant
		where restaurant_no = #{restaurantNo}
	</select>

	<select id="getCount" resultType="Integer">
		select count(*) from restaurant
	</select>

	<select id="getWithNameCount" parameterType="String"
		resultType="Integer">
		select count(*) from restaurant where restaurant_name like
		'%'||#{key}||'%'
	</select>

	<select id="getWithCategoryCount" parameterType="String"
		resultType="Integer">
		select count(*) from restaurant where restaurant_Category
		like
		'%'||#{key}||'%'
	</select>
	<select id="getWithMenuCount" parameterType="String"
		resultType="Integer">
		select count(*) from restaurant where restaurant_menu like
		'%'||#{key}||'%'
	</select>
	<select id="getWithSiCount" parameterType="String"
		resultType="Integer">
		select count(*) from restaurant where restaurant_si like
		'%'||#{key}||'%'
	</select>
	<select id="getWithGuCount" parameterType="String"
		resultType="Integer">
		select count(*) from restaurant where restaurant_gu like
		'%'||#{key}||'%'
	</select>
	<select id="getWithDongCount" parameterType="String"
		resultType="Integer">
		select count(*) from restaurant  
		where case 
        when
        restaurant_dong like '%동' then
        restaurant_dong
        when
        restaurant_dong like '%읍' then
        restaurant_dong
        when
        restaurant_dong like '%면' then
        restaurant_dong
        when
        restaurant_dong like '%리' then
        restaurant_dong
        else
        restaurant_gu end
        like '%'||#{key}||'%'
	</select>

	<insert id="add" parameterType="map">
		insert into restaurant values (
		restaurant_seq.nextVal , #{restaurantName},
		#{restaurantPh},
		#{restaurantCategory}, #{restaurantSi},
		#{restaurantGu}, #{restaurantDong}, #{restaurantAddress},
		#{restaurantLatitude},
		#{restaurantLongtitude}
		)
	</insert>

	<update id="set" parameterType="map">
		update restaurant set restaurant_name =
		#{restaurantName}, restaurant_category =
		#{restaurantCategory}, #{restaurantAddress}
		where restaurant_no = #{restaurantNo}
	</update>

	<delete id="remove" parameterType="int">
		delete from restaurant where
		restaurant_no = #{restaurantNo}
	</delete>

</mapper>