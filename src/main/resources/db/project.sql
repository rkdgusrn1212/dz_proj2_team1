CREATE TABLE MEMBER( -- 멤버 테이블
    MEMBER_NO        	NUMBER		NOT NULL	PRIMARY KEY,	-- 멤버 고유번호 (100번부터 시작 1씩 증가)
    MEMBER_NAME    	VARCHAR2(128)	NOT NULL,			-- 멤버명
    MEMBER_ID		VARCHAR2(128) 	NOT NULL	UNIQUE,		-- 멤버 아이디 (중복 불가)
    MEMBER_PWD 	    	VARCHAR2(128)	NOT NULL,			-- 멤버 비밀번호
    MEMBER_PHONE   	VARCHAR2(128)	NOT NULL,			-- 멤버 연락처
    MEMBER_BIRTH   	VARCHAR2(128)	NOT NULL,			-- 멤버 생년월일
    MEMBER_EMAIL    	VARCHAR2(128)  	NOT NULL	UNIQUE,		-- 멤버 이메일
    MEMBER_ADDRESS  	VARCHAR2(256)	NOT NULL,			-- 멤버 주소
);
CREATE SEQUENCE MEMBER_SEQ START WITH 100 INCREMENT BY 1 NOCYCLE;
SELECT*FROM MEMBER;

CREATE TABLE RESTAURANT ( 
  RESTAURANT_NO		NUMBER(38)  	NOT NULL 	PRIMARY KEY,	-- 식당 고유번호
  RESTAURANT_NAME 	VARCHAR2(128),					-- 식당명
  RESTAURANT_PH 	VARCHAR2(128),					-- 식당 전화번호
  RESTAURANT_CATEGORY 	VARCHAR2(128),					-- 식당 분류
  RESTAURANT_MENU 	VARCHAR2(256),					-- 대표메뉴
  RESTAURANT_SI 		VARCHAR2(128),					-- 시
  RESTAURANT_GU 	VARCHAR2(128),					-- 구
  RESTAURANT_DONG 	VARCHAR2(256),					-- 동
  RESTAURANT_ADDRESS 	VARCHAR2(256),					-- 도로명 주소
  RESTAURANT_LATITUDE 	NUMBER(38, 7),					-- 위도
  RESTAURANT_LONGTITUDE NUMBER(38, 7)					-- 경도
);    

CREATE SEQUENCE RESTAURANT_SEQ START WITH 1 INCREMENT BY 1 NOCYCLE;	-- 시퀀스
SELECT*FROM RESTAURANT;

CREATE TRIGGER RES_TRI							-- 트리거
BEFORE INSERT
ON RESTAURANT FOR EACH ROW
BEGIN
SELECT RESTAURANT_SEQ.NEXTVAL INTO :new.RESTAURANT_NO FROM dual;
END;


CREATE TABLE REVIEW( -- 리뷰 테이블
    REVIEW_NO       	NUMBER  	NOT NULL	PRIMARY KEY,	-- 리뷰 고유번호 (100번부터 시작 1씩 증가)
    REVIEW_CONTENT  	VARCHAR2(512)	NOT NULL,			-- 리뷰 내용
    REVIEW_RESTAURANT     NUMBER		NOT NULL,			-- 리뷰할 식당 FK ( RESTAURANT 테이블의 PK 참조 )
    REVIEW_WRITER   	NUMBER						-- 작성자	 FK ( MEMBER 테이블의 PK 참조 )
    REVIEW_STAR     	NUMBER		NOT NULL,			-- 별점
    REVIEW_REGDATE  	DATE		NOT NULL,			-- 작성일

    CONSTRAINT 
    FK_REVIEW_R FOREIGN KEY(REVIEW_RESTAURANT) REFERENCES RESTAURANT(RESTAURANT_NO) ON DELETE CASCADE,
    CONSTRAINT
    FK_REVIEW_M FOREIGN KEY(REVIEW_WRITER) REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE
);

CREATE SEQUENCE REVIEW_SEQ START WITH 100 INCREMENT BY 1 NOCYCLE;
SELECT*FROM REVIEW;

CREATE TABLE QNA( -- 고객센터 QnA 테이블
    QNA_NO       		NUMBER  	NOT NULL	PRIMARY KEY,	-- 문의 번호 (100번부터 시작 1씩 증가)
    QNA_TITLE    		VARCHAR2(64)	NOT NULL,			-- 문의 제목
    QNA_CONTENT 	VARCHAR2(512)	NOT NULL,			-- 문의 내용
    QNA_REGDATE  	DATE		NOT NULL,			-- 작성일
    QNA_WRITER  		NUMBER,						-- 회원 작성자	FK ( MEMBER 테이블 PK 참조 )
    QNA_NONMEMBER	VARCHAR2(64),					-- 비회원 작성자
    QNA_PWD		VARCHAR2(64)	NOT NULL,			-- 비회원 작성시 비밀번호
    QNA_PUBLIC		BOOLEAN	DEFAULT 0,			-- 공개여부 (기본값 0 비공개)
    QNA_REPLY		VARCHAR2(512)					-- 답글
    CONSTRAINT 	
    FK_SERVICE FOREIGN KEY(QNA_WRITER) REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE
);

CREATE SEQUENCE QNA_SEQ START WITH 100 INCREMENT BY 1 NOCYCLE;
SELECT*FROM SERVICE;

CREATE TABLE NOTICE( -- 공지사항 테이블
    NOTICE_NO       	NUMBER  	NOT NULL	PRIMARY KEY,	-- 공지 번호 (100번부터 시작 1씩 증가)
    NOTICE_TITLE    		VARCHAR2(30)	NOT NULL,			-- 공지 제목
    NOTICE_CONTENT  	VARCHAR2(200)	NOT NULL,			-- 공지내용
    NOTICE_REGDATE  	DATE		NOT NULL			-- 작성일
);

CREATE SEQUENCE NOTICE_SEQ START WITH 100 INCREMENT BY 1 NOCYCLE;
SELECT*FROM SERVICE;